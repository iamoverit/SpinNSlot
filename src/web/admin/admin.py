from django import forms
from django.contrib import admin
from django.contrib.auth.forms import UserChangeForm
from django.urls import path

from web.admin.forms import TournamentForm
from web.models import CustomUser, GuestParticipant, ItemSlot, UserSlot, Customers, TimeSlot, Tournament, TournamentRegistration
import datetime
# Register your models here.

@admin.register(Customers)
class CustomersAdmin(admin.ModelAdmin):
    list_display = ('id', 'name', 'phone_number')  # –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ
    search_fields = ('name', 'phone_number')  # –ü–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
    ordering = ('name',)  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Table
@admin.register(ItemSlot)
class ItemSlotAdmin(admin.ModelAdmin):
    list_display = ('id', 'name', 'customer')  # –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è —Å–≤—è–∑—å —Å Customers
    list_filter = ('customer',)  # –§–∏–ª—å—Ç—Ä—ã –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—é
    search_fields = ('name', 'customer__name')  # –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É
    ordering = ('name',)  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ UserDateTime
@admin.register(UserSlot)
class UserSlotAdmin(admin.ModelAdmin):
    list_display = ('user', 'table', 'time', 'reservation_date')
    list_filter = ('table', 'user')  # –§–∏–ª—å—Ç—Ä—ã –ø–æ —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø–æ–ª—è–º
    search_fields = ('user__username', 'table__name')  # –ü–æ–∏—Å–∫ –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

@admin.register(TimeSlot)
class TimeSlotsAdmin(admin.ModelAdmin):
    list_display = ('customer', 'time_slot')
    list_filter = ('time_slot',)
    search_fields = ('customer__name',)
    
@admin.register(Tournament)
class TournamentAdmin(admin.ModelAdmin):
    class Media:
        js = ('js/custom_datetime.js',)
    form = TournamentForm
    change_form_template = 'admin/web/tournament/change_form.html'
    list_display = ('name', 'date', 'customer', 'start_time_', 'end_time_', 'participants_count', 'min_participants_')
    list_filter = ('is_training', 'is_finished', 'is_canceled', 'name')
    filter_horizontal = ('tables',)
    fieldsets = (
        (None, {
            'fields': ('customer', 'name', 'date', 'start_time', 'end_time')
        }),
        ('–£—á–∞—Å—Ç–Ω–∏–∫–∏', {
            'fields': ('min_participants', 'max_participants', 'tables')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', {
            'fields': ('description', 'is_canceled', 'is_finished', 'is_training')
        }),
    )
    save_as = True

    def get_changeform_initial_data(self, request):
        return {
            'date': datetime.date.today() + datetime.timedelta(days=1),
        }
    
    @admin.display(description='üèÅ',)
    def end_time_(self, obj):
        return obj.end_time

    @admin.display(description='üïí',)
    def start_time_(self, obj):
        return obj.start_time

    @admin.display(description='Min',)
    def min_participants_(self, obj):
        return obj.min_participants
    
    @admin.display(description='Registred',)
    def participants_count(self, obj):
        return f'{obj.tournamentregistration_set.count()}+{obj.guestparticipant_set.count()}/{obj.max_participants}'

# –ù–ï–¢ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ admin.site.register()
@admin.register(TournamentRegistration)
class TournamentRegistrationAdmin(admin.ModelAdmin):
    list_display = ('user', 'tournament', 'registration_date')
    list_filter = ('tournament',)

@admin.register(GuestParticipant)
class GuestParticipantAdmin(admin.ModelAdmin):
    list_display = ('full_name', 'tournament', 'registered_by', 'phone')
    list_filter = ('tournament',)

# # –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class CustomUserChangeForm(UserChangeForm):
    class Meta(UserChangeForm.Meta):
        model = CustomUser
        fields = '__all__'

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # –£–±–∏—Ä–∞–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—è –ø–∞—Ä–æ–ª—è
        self.fields['password'].required = False
        self.fields['password'].help_text = (
            '–ü–∞—Ä–æ–ª—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ. '
            '–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å <a href=\'../password/\'>–∑–¥–µ—Å—å</a>.'
        )

@admin.register(CustomUser)
class CustomUserAdmin(admin.ModelAdmin):
    form = CustomUserChangeForm  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é —Ñ–æ—Ä–º—É
    def get_urls(self):
        urls = super().get_urls()
        custom_urls = [
            path('<id>/password/', self.admin_site.admin_view(self.user_change_password)),
        ]
        return custom_urls + urls

    def user_change_password(self, request, id, form_url=''):
        from django.contrib.auth.views import PasswordChangeView
        return PasswordChangeView.as_view()(request, id, form_url)
